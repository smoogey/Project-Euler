# Finds the larget product of 13 adjacent digits in this 1000 digit number. 

n1 = str(73167176531330624919225119674426574742355349194934)
n2 = str(96983520312774506326239578318016984801869478851843)
n3 = str(85861560789112949495459501737958331952853208805511)
n4 = str(12540698747158523863050715693290963295227443043557)
n5 = str(66896648950445244523161731856403098711121722383113)
n6 = str(62229893423380308135336276614282806444486645238749)
n7 = str(30358907296290491560440772390713810515859307960866)
n8 = str(70172427121883998797908792274921901699720888093776)
n9 = str(65727333001053367881220235421809751254540594752243)
n10 = str(52584907711670556013604839586446706324415722155397)
n11 = str(53697817977846174064955149290862569321978468622482)
n12 = str(83972241375657056057490261407972968652414535100474)
n13 = str(82166370484403199890008895243450658541227588666881)
n14 = str(16427171479924442928230863465674813919123162824586)
n15 = str(17866458359124566529476545682848912883142607690042)
n16 = str(242190226710556263211111093705442175069416589604080)
n17 = str(7198403850962455444362981230987879927244284909188)
n18 = str(845801561660979191338754992005240636899125607176060)
n19 = str(5886116467109405077541002256983155200055935729725)
n20 = str(71636269561882670428252483600823257530420752963450)

bigString = n1 + n2 + n3 + n4 + n5 +n6 +n7 +n8 +n9 +n10 +n11 +n12 +n13 +n14 +n15 +n16 + n17 + n18 + n19 + n20
bigList = list(bigString)

def adjac(numOfInts):
    productList = []
    lengthOfBigNum = len(bigList)
    factors = numOfInts
    position = 0
    while position <= lengthOfBigNum - factors:
        dummy = 1
        for i in bigList[position : position + factors]:
            dummy = dummy * int(i)
            productList.append(dummy)
        position += 1
    return productList

print(max(adjac(13)))
